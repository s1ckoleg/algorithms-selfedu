"""
Алгоритм для поиска образов в строке.
Сложность в худшем случае: О(n*m).
Сложность в лучшем случае: О(n/m).
Средняя сложность: О(m/|Σ|), где Σ — количество уникальных символов в строке и образе.
https://www.youtube.com/watch?v=kvWFAZwZ_8U&list=PLA0M1Bcd0w8yF0PO0eJ9v8VlsYEowmsnJ&index=2
"""

word = "лилила"
text = "лилилось лилилась"

# формирование таблицы смещений

s = set()  # уникальные символы в образе
m = len(word)  # длина образца
d = {}  # таблица смещений

for i in range(m-2, -1, -1):  # цикл от предпоследнего элемента
    if word[i] not in s:
        d[word[i]] = m-i-1
        s.add(word[i])

if word[-1] not in s:  # отдельно добавляем последний символ
    d[word[-1]] = m

d['*'] = m  # смещения для любых других символов

# поиск образа в строке

n = len(text)  # длина строки

if n >= m:
    i = m-1  # счетчик указателя символа в строке

    while i < n:
        k = 0  # счетчик указателя символа в строке при итерации по образу
        for j in range(m-1, -1, -1):  # цикл от последнего символа образа до первого
            if text[i-k] != word[j]:
                if j == m-1:
                    off = d[text[i]] if d.get(text[i], False) else d['*']  # смещение, если не равен последний символ
                else:
                    off = d[word[j]]  # смещение, если не равен не последний символ

                i += off
                break

            k += 1

        if j == 0:  # если дошли до конца образа, значит все его символы совпали
            print(f"Образ найден по индексу {i-k+1}")
            exit()

    if i == n:
        print("Образ не найден")

else:
    print("Образ больше строки")
